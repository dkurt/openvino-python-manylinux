name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      VERSION: 0.0.3
    steps:
    - uses: actions/checkout@v2

    - name: Build
      run: docker build -t manylinux manylinux --build-arg VERSION=${VERSION}

    - name: Copy binaries
      run: docker run -v $(pwd):/mnt manylinux sh -c "cp /wheels/* /mnt"

    - uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: "*.whl"

    - name: Publish test packages
      env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: python3 -m twine upload --repository testpypi *.whl

  test_ubuntu18:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Install
        run: python3.6 -m pip install -i https://test.pypi.org/simple/ experimental-openvino-python

      - name: Test
        run: python3.6 -c "from openvino.inference_engine import IECore; ie = IECore()"

  test_debian10:
    needs: build
    runs-on: ubuntu-18.04
    container:
      image: docker://debian:10
    steps:
      - name: Install
        run: python3.7 -m pip install -i https://test.pypi.org/simple/ experimental-openvino-python

      - name: Test
        run: python3.7 -c "from openvino.inference_engine import IECore; ie = IECore()"


  test_ubuntu20:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Install
        run: python3.8 -m pip install -i https://test.pypi.org/simple/ experimental-openvino-python

      - name: Test
        run: python3.8 -c "from openvino.inference_engine import IECore; ie = IECore()"


  publish:
    # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: [test_ubuntu18, test_debian10, test_ubuntu20]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels

      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          tar -xf wheels.tar.gz
          ls
          ls wheels
          python3 -m twine upload wheels/*.whl
